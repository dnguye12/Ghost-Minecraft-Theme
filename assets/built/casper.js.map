{"version":3,"sources":["jquery.fitvids.js","infinite-scroll.js"],"names":["$","fn","fitVids","options","head","div","settings","customSelector","ignore","document","getElementById","getElementsByTagName","createElement","innerHTML","appendChild","childNodes","extend","this","each","selectors","ignoreList","push","$allVideos","find","join","not","aspectRatio","videoName","$this","parents","length","tagName","toLowerCase","parent","css","isNaN","attr","parseInt","height","width","_count","wrap","removeAttr","window","jQuery","Zepto","feedElement","buffer","ticking","loading","lastScrollY","lastWindowHeight","lastDocumentHeight","nextElement","querySelector","onPageLoad","resNextElement","status","removeEventListener","onScroll","onResize","response","querySelectorAll","forEach","item","importNode","href","documentElement","scrollHeight","onUpdate","xhr","XMLHttpRequest","responseType","addEventListener","open","send","requestTick","requestAnimationFrame","scrollY","innerHeight","passive"],"mappings":"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","file":"casper.js","sourcesContent":["/*jshint browser:true */\n/*!\n* FitVids 1.3\n*\n*\n* Copyright 2017, Chris Coyier + Dave Rupert + Ghost Foundation\n* This is an unofficial release, ported by John O'Nolan\n* Credit to Thierry Koblentz - http://www.alistapart.com/articles/creating-intrinsic-ratios-for-video/\n* Released under the MIT license\n*\n*/\n\n;(function( $ ){\n\n  'use strict';\n\n  $.fn.fitVids = function( options ) {\n    var settings = {\n      customSelector: null,\n      ignore: null\n    };\n\n    if(!document.getElementById('fit-vids-style')) {\n      // appendStyles: https://github.com/toddmotto/fluidvids/blob/master/dist/fluidvids.js\n      var head = document.head || document.getElementsByTagName('head')[0];\n      var css = '.fluid-width-video-container{flex-grow: 1;width:100%;}.fluid-width-video-wrapper{width:100%;position:relative;padding:0;}.fluid-width-video-wrapper iframe,.fluid-width-video-wrapper object,.fluid-width-video-wrapper embed {position:absolute;top:0;left:0;width:100%;height:100%;}';\n      var div = document.createElement(\"div\");\n      div.innerHTML = '<p>x</p><style id=\"fit-vids-style\">' + css + '</style>';\n      head.appendChild(div.childNodes[1]);\n    }\n\n    if ( options ) {\n      $.extend( settings, options );\n    }\n\n    return this.each(function(){\n      var selectors = [\n        'iframe[src*=\"player.vimeo.com\"]',\n        'iframe[src*=\"youtube.com\"]',\n        'iframe[src*=\"youtube-nocookie.com\"]',\n        'iframe[src*=\"kickstarter.com\"][src*=\"video.html\"]',\n        'object',\n        'embed'\n      ];\n\n      if (settings.customSelector) {\n        selectors.push(settings.customSelector);\n      }\n\n      var ignoreList = '.fitvidsignore';\n\n      if(settings.ignore) {\n        ignoreList = ignoreList + ', ' + settings.ignore;\n      }\n\n      var $allVideos = $(this).find(selectors.join(','));\n      $allVideos = $allVideos.not('object object'); // SwfObj conflict patch\n      $allVideos = $allVideos.not(ignoreList); // Disable FitVids on this video.\n\n      $allVideos.each(function(){\n        var $this = $(this);\n        if($this.parents(ignoreList).length > 0) {\n          return; // Disable FitVids on this video.\n        }\n        if (this.tagName.toLowerCase() === 'embed' && $this.parent('object').length || $this.parent('.fluid-width-video-wrapper').length) { return; }\n        if ((!$this.css('height') && !$this.css('width')) && (isNaN($this.attr('height')) || isNaN($this.attr('width'))))\n        {\n          $this.attr('height', 9);\n          $this.attr('width', 16);\n        }\n        var height = ( this.tagName.toLowerCase() === 'object' || ($this.attr('height') && !isNaN(parseInt($this.attr('height'), 10))) ) ? parseInt($this.attr('height'), 10) : $this.height(),\n            width = !isNaN(parseInt($this.attr('width'), 10)) ? parseInt($this.attr('width'), 10) : $this.width(),\n            aspectRatio = height / width;\n        if(!$this.attr('name')){\n          var videoName = 'fitvid' + $.fn.fitVids._count;\n          $this.attr('name', videoName);\n          $.fn.fitVids._count++;\n        }\n        $this.wrap('<div class=\"fluid-width-video-container\"><div class=\"fluid-width-video-wrapper\"></div></div>').parent('.fluid-width-video-wrapper').css('padding-top', (aspectRatio * 100)+'%');\n        $this.removeAttr('height').removeAttr('width');\n      });\n    });\n  };\n\n  // Internal counter for unique video names.\n  $.fn.fitVids._count = 0;\n\n// Works with either jQuery or Zepto\n})( window.jQuery || window.Zepto );\n","/* eslint-env browser */\n\n/**\n * Infinite Scroll\n * Used on all pages where there is a list of posts (homepage, tag index, etc).\n *\n * When the page is scrolled to 300px from the bottom, the next page of posts\n * is fetched by following the the <link rel=\"next\" href=\"...\"> that is output\n * by {{ghost_head}}.\n *\n * The individual post items are extracted from the fetched pages by looking for\n * a wrapper element with the class \"post-card\". Any found elements are appended\n * to the element with the class \"post-feed\" in the currently viewed page.\n */\n\n(function (window, document) {\n    // next link element\n    var nextElement = document.querySelector('link[rel=next]');\n    if (!nextElement) {\n        return;\n    }\n\n    // post feed element\n    var feedElement = document.querySelector('.post-feed');\n    if (!feedElement) {\n        return;\n    }\n\n    var buffer = 300;\n\n    var ticking = false;\n    var loading = false;\n\n    var lastScrollY = window.scrollY;\n    var lastWindowHeight = window.innerHeight;\n    var lastDocumentHeight = document.documentElement.scrollHeight;\n\n    function onPageLoad() {\n        if (this.status === 404) {\n            window.removeEventListener('scroll', onScroll);\n            window.removeEventListener('resize', onResize);\n            return;\n        }\n\n        // append contents\n        var postElements = this.response.querySelectorAll('article.post-card');\n        postElements.forEach(function (item) {\n            // document.importNode is important, without it the item's owner\n            // document will be different which can break resizing of\n            // `object-fit: cover` images in Safari\n            feedElement.appendChild(document.importNode(item, true));\n        });\n\n        // set next link\n        var resNextElement = this.response.querySelector('link[rel=next]');\n        if (resNextElement) {\n            nextElement.href = resNextElement.href;\n        } else {\n            window.removeEventListener('scroll', onScroll);\n            window.removeEventListener('resize', onResize);\n        }\n\n        // sync status\n        lastDocumentHeight = document.documentElement.scrollHeight;\n        ticking = false;\n        loading = false;\n    }\n\n    function onUpdate() {\n        // return if already loading\n        if (loading) {\n            return;\n        }\n\n        // return if not scroll to the bottom\n        if (lastScrollY + lastWindowHeight <= lastDocumentHeight - buffer) {\n            ticking = false;\n            return;\n        }\n\n        loading = true;\n\n        var xhr = new window.XMLHttpRequest();\n        xhr.responseType = 'document';\n\n        xhr.addEventListener('load', onPageLoad);\n\n        xhr.open('GET', nextElement.href);\n        xhr.send(null);\n    }\n\n    function requestTick() {\n        ticking || window.requestAnimationFrame(onUpdate);\n        ticking = true;\n    }\n\n    function onScroll() {\n        lastScrollY = window.scrollY;\n        requestTick();\n    }\n\n    function onResize() {\n        lastWindowHeight = window.innerHeight;\n        lastDocumentHeight = document.documentElement.scrollHeight;\n        requestTick();\n    }\n\n    window.addEventListener('scroll', onScroll, {passive: true});\n    window.addEventListener('resize', onResize);\n\n    requestTick();\n})(window, document);\n"]}